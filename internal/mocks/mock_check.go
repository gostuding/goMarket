// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/gostuding/goMarket/internal/server (interfaces: CheckOrdersStorage)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockCheckOrdersStorage is a mock of CheckOrdersStorage interface
type MockCheckOrdersStorage struct {
	ctrl     *gomock.Controller
	recorder *MockCheckOrdersStorageMockRecorder
}

// MockCheckOrdersStorageMockRecorder is the mock recorder for MockCheckOrdersStorage
type MockCheckOrdersStorageMockRecorder struct {
	mock *MockCheckOrdersStorage
}

// NewMockCheckOrdersStorage creates a new mock instance
func NewMockCheckOrdersStorage(ctrl *gomock.Controller) *MockCheckOrdersStorage {
	mock := &MockCheckOrdersStorage{ctrl: ctrl}
	mock.recorder = &MockCheckOrdersStorageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockCheckOrdersStorage) EXPECT() *MockCheckOrdersStorageMockRecorder {
	return m.recorder
}

// GetAccrualOrders mocks base method
func (m *MockCheckOrdersStorage) GetAccrualOrders() []string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAccrualOrders")
	ret0, _ := ret[0].([]string)
	return ret0
}

// GetAccrualOrders indicates an expected call of GetAccrualOrders
func (mr *MockCheckOrdersStorageMockRecorder) GetAccrualOrders() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAccrualOrders", reflect.TypeOf((*MockCheckOrdersStorage)(nil).GetAccrualOrders))
}

// SetOrderData mocks base method
func (m *MockCheckOrdersStorage) SetOrderData(arg0, arg1 string, arg2 float32) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetOrderData", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// SetOrderData indicates an expected call of SetOrderData
func (mr *MockCheckOrdersStorageMockRecorder) SetOrderData(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetOrderData", reflect.TypeOf((*MockCheckOrdersStorage)(nil).SetOrderData), arg0, arg1, arg2)
}
